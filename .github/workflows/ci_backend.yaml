name: CI for backend
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/ci_backend.yaml'

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo's outputs
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target
        key: ${{ runner.os }}-${{ hashFiles('backend/Cargo.lock') }}

    - name: Formatter
      run: |
        cargo fmt -- --check
      working-directory: ./backend

    - name: Check codes
      run: |
        cargo check
      working-directory: ./backend

    - name: Linter
      run: |
        cargo clippy --all-targets -- --no-deps -D clippy::all
      working-directory: ./backend

    - name: Test
      run: |
        cargo test
      working-directory: ./backend

    # TODO
    # medium test

  deploy:
    name: build and push
    needs: check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Prepare Heroku login credentials
      run: |
        cat > ~/.netrc <<EOF
          machine api.heroku.com
            login $HEROKU_EMAIL
            password $HEROKU_API_KEY
          machine git.heroku.com
            login $HEROKU_EMAIL
            password $HEROKU_API_KEY
        EOF
      env:
        HEROKU_EMAIL: ${{ secrets.HEROKU_USERNAME }}
        HEROKU_API_KEY: ${{ secrets.HEROKU_PASSWORD }}

    - name: Login to Heroku Container Registry
      run: |
        heroku container:login

    - name: Push to Heroku Container Registry
      run: |
        heroku container:push --app ${{ secrets.HEROKU_APPNAME }} web
      working-directory: ./backend

    - name: Release pushed container
      run: |
        heroku container:release --app ${{ secrets.HEROKU_APPNAME }} web
      working-directory: ./backend
